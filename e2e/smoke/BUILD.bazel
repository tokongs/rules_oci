load("@aspect_bazel_lib//lib:testing.bzl", "assert_json_matches")
load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_tarball")
load("@container_structure_test//:defs.bzl", "container_structure_test")

oci_image(
    name = "image",
    architecture = select({
        "@platforms//cpu:arm64": "arm64",
        "@platforms//cpu:x86_64": "amd64",
    }),
    cmd = [
        "--arg1",
        "--arg2",
    ],
    entrypoint = ["//custom_bin"],
    env = {
        "ENV": "//test",
    },
    os = "linux",
)

tags = [
    "my/image:some-tag",
    "my/image:latest",
]

oci_tarball(
    name = "tar",
    image = ":image",
    repo_tags = tags,
)

container_structure_test(
    name = "test",
    configs = ["test.yaml"],
    driver = "tar",
    image = ":tar",
)

genrule(
    name = "tar_manifest",
    srcs = [":tar"],
    outs = ["manifest.json"],
    cmd = "tar -xOf ./$(location :tar) manifest.json > $@",
)

write_file(
    name = "expected_RepoTags",
    out = "expected_RepoTags.json",
    content = [str(tags)],
)

assert_json_matches(
    name = "check_tags",
    file1 = ":tar_manifest",
    file2 = ":expected_RepoTags",
    filter1 = ".[0].RepoTags",
)
